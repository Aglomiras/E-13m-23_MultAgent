package org.mpei.ClassWork_8;

public class Lecture {

    /**
     * Функциональный интерфейс - способ передачи в класс какой-либо функции или какого-либо метода
     * функциональный интерфейс помечается аннотацией - @FunctionalInterface
     *
     * Comparator - интерфейс, обычно используется для сортировки коллекций. Нужен для сравнения двух элементов.
     * Пример находится в классе "Main".
     *
     * Consumer -
     *
     * Predicate - проверка соблюдения некоторого услвоия. Возвращаемый тип boolean.
     *
     * Лямбда-функция - функция, которая обернута в какой-то объект (анонимная функция).
     * Мы можем передать функции конкретное выражение.
     *
     * Stream API - способ работать с коллекциями. Работает с лямбда выражениями.
     * Filter - просто уменьшает коллекцию.
     * Map - переводит объект из одного типа в другой.
     * Foreach -
     * Collect - делает из stream  коллекцию.
     * Distinct - удаление определенных объектов.
     * */

}
